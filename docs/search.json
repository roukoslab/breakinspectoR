[{"path":"https://roukoslab.github.io/breakinspectoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sergi Sayols. Maintainer.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Longo GMC, Sayols S, Kotini AG, Heinen S, Mockel MM, Beli P, Roukos V (2024). “Linking CRISPR-Cas9 Double-Strand Break Profiles Gene Editing Precision BreakTag.” Nature Biotechnology. doi:10.1038/s41587-024-02238-8.","code":"@Article{,   title = {Linking CRISPR-Cas9 Double-Strand Break Profiles to Gene Editing Precision with BreakTag},   author = {Gabriel M. C. Longo and Sergi Sayols and Andriana G. Kotini and Sabine Heinen and Martin M. Mockel and Petra Beli and Vassilis Roukos},   journal = {Nature Biotechnology},   year = {2024},   doi = {10.1038/s41587-024-02238-8}, }"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"breakinspector","dir":"","previous_headings":"","what":"Identification of CRISPR offtargets by BreakTag","title":"Identification of CRISPR offtargets by BreakTag","text":"companion R package BreakTag protocol identification CRISPR offtargets. breakinspectoR R package performs guided search toward putative -/-targets.","code":""},{"path":[]},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"initial-preprocessing","dir":"","previous_headings":"Overall description","what":"Initial preprocessing","title":"Identification of CRISPR offtargets by BreakTag","text":"Initial preprocessing typically done linux cluster using Breaktag pipeline. includes following steps: scanning reads (single- paired-end) containing expected 8-nt UMI followed 8-nt sample barcode 5’ end read 1. alignment reads reference genome BWA, seed length 19 default scoring/penalty values mismatches, gaps read clipping. reads mapped minimum quality score Q (defaults Q=60) retained. close spatial consecutive reads within window 30 nucleotides UMI differing 2 mismatches considered PCR duplicates one kept. resulting reads aggregated per position reported BED file.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"breakinspector-analysis","dir":"","previous_headings":"Overall description","what":"breakinspectoR analysis","title":"Identification of CRISPR offtargets by BreakTag","text":"analysis path consists following steps: previously generated BED file, identify stacks read ends candidate loci CRISPR-edited. obtain sequence context candidate loci, keep N nucleotides upstream PAM contain M mismatches regard gDNA guide sequence. Defaults canonical N=3, M=7, PAM=“NGG”. count number reads (== signal DSBreaks) targeted non-targeted control library. = number breaks within region target library B = total number breaks whole target library C = number breaks within region nontarget library D = total number breaks whole nontarget library number trials = +1 number successes = B+1 estimated success probability trial = (C+1) / (D+1) enrichment calculated : ((+1) / (B+1)) / ((C+1) / (D+1)) note add pseudocount avoid dividing 0 q-values local False Discovery Rate values estimated FDR control. additionally, breakinspectoR implements complimentary [elaborated] method estimate false discovery targets. summarize, breakinspectoR reshuffles signal target library using several multinomially distributed random number vectors sampled equal probabilities signal originally detected offtargets. , breakinspectoR analysis done reshuffled target library vs. non-target library, FDR estimated comparing signal offtarget called original target library targets detected reshuffled target library (targets expected called). breakinspectoR includes several handy visualizations analyze summarize -/-targets detected. functions include analysis fidelity gDNA, sequence composition target regions, frequency mismatches per position protospacer, genomic distribution targeted regions.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identification of CRISPR offtargets by BreakTag","text":"Open R install directly Github devtools (install package devtools haven’t, yet):","code":"devtools::install_github(\"roukoslab/breakinspectoR\")"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Identification of CRISPR offtargets by BreakTag","text":"simple example using demo data human chr6 included package. experiment identifies offtargets generated VEGFA site 2 sgRNA CRISPR/Cas9. Call breakinspectoR analysis find offtargets enriched targeted library compared non-targeted. ’ll stick default 7 mismatches allowed guide, expected cut site 3 bp away PAM (Cas9). analysis take seconds run. Afterwards comprehensive table hundred enriched offtarget loci, can summarize using accompanying plotting functions:","code":"target_file     <- system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\") non_target_file <- system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\") guide           <- \"GACCCCCTCCACCCCGCCTC\" PAM             <- c(canonical=\"NGG\", \"NAG\") bsgenome        <- \"BSgenome.Hsapiens.UCSC.hg38\"  offtargets <- breakinspectoR(     target        =target_file,     nontarget     =non_target_file,     guide         =guide,     PAM           =PAM,     bsgenome      =bsgenome,     cutsiteFromPAM=3,     verbose       =FALSE ) plot_position_cutsite(offtargets, guide=guide, pam=PAM[\"canonical\"]) plot_mismatch_freq(offtargets) plot_offtargets_by_pam(offtargets) plot_sequence_composition(offtargets, guide=guide, pam=PAM[\"canonical\"]) plot_guide_fidelity(offtargets, guide=guide, pam=PAM[\"canonical\"]) plot_genomic_position(offtargets, bsgenome=bsgenome,                       target=system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\")) plot_pam_logo(offtargets) plot_pam_composition(offtargets) manhattan_plot(offtargets, bsgenome=bsgenome)  # simulate 2 different experiments by picking 25 random offtargets exp1 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) exp2 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) plot_relative_activity(list(a=exp1, b=exp2), what=\"all\") plot_specificity(list(a=exp1, b=exp2)) plot_blunt_rate_density(list(a=exp1, b=exp2))"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"scission-profile-analysis","dir":"","previous_headings":"Example usage","what":"Scission profile analysis","title":"Identification of CRISPR offtargets by BreakTag","text":"One unique feature BreakTag provides structure DSB single base resolution. BreakinspectoR implements method several visualizations analyze DSB end structure determined BreakTag. Along several useful visualizations:","code":"offtargets.scission_profile <- scission_profile_analysis(   x        =offtargets,   target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),   nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),   bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\") # simulate 2 different experiments by picking 25 random offtargets exp1 <- sample(offtargets.scission_profile, 25) exp2 <- sample(offtargets.scission_profile, 25)  plot_blunt_rate_density(list(a=exp1, b=exp2)) plot_overhang_size(list(a=exp1, b=exp2)) plot_scission_profile(offtargets.scission_profile)"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"input-files","dir":"","previous_headings":"","what":"Input files","title":"Identification of CRISPR offtargets by BreakTag","text":"Input BED files describing coordinates number DSB expected “target” “non-target” libraries. ’s possible run breakinspectoR without non-target library, nevertheless advised include experiment calculate p-value control false discovery rate. files typically created Breaktag pipeline, although conforming BED file accepted breakinspectoR.","code":"chr6  148074  148075  .  2  + chr6  148093  148094  .  1  - chr6  148240  148241  .  1  - chr6  148503  148504  .  1  + chr6  148636  148637  .  1  - chr6  148697  148698  .  1  - chr6  149009  149010  .  1  - chr6  149363  149364  .  1  + chr6  150252  150253  .  2  + chr6  150263  150264  .  1  +"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"btmotif","dir":"","previous_headings":"","what":"BTmotif","title":"Identification of CRISPR offtargets by BreakTag","text":"Additionally, may want run companion shiny app derive Cas9 sequence determinants BreakInspectoR output. uses XGBoost provided sequence (usually, protospacer) predict nucleotides positions important predict numerical outcome (eg. blunt rate, Cas9 activity, etc.).","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"dependencies","dir":"","previous_headings":"BTmotif","what":"Dependencies","title":"Identification of CRISPR offtargets by BreakTag","text":"main dependency H2O, can installed CRAN. app tested H2O version 3.36.1.2. Test H2O installation : ’ll need couple packages run web app: generate motifs, ’ll also need ggplot2 ggseqlogo:","code":"install.packages(\"h2o\") library(h2o) localH2O = h2o.init() demo(h2o.kmeans) install.packages(\"shiny\") install.packages(\"shinydashboard\") install.packages(\"ggplot2\") devtools::install_github(\"omarwagih/ggseqlogo\")"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"run","dir":"","previous_headings":"BTmotif","what":"Run","title":"Identification of CRISPR offtargets by BreakTag","text":"Open web app R console: Paste table targets click Go!. check Example data. list can actually table <tab> <comma> separated fields. columns expected order: protospacer_sequence | blunt_rate.","code":"breakinspectoR::shiny_BTmotif()"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"bluntpred","dir":"","previous_headings":"","what":"bluntPred","title":"Identification of CRISPR offtargets by BreakTag","text":"set gRNAs, may want run prediction blunt rates Streptococcus pyogenes Cas9 (SpCas9) using XGBoost model trained HiPlex1 data.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"dependencies-1","dir":"","previous_headings":"bluntPred","what":"Dependencies","title":"Identification of CRISPR offtargets by BreakTag","text":"main dependency H2O. Remove previously installed H2O packages R. Download packages H2O depends . Download install H2O package R. models trained H2O version 3.36.1.2, therefore specifically install version. Test H2O installation : Now, ’s set install package. package resides GitHub . probably need devtools (install.packages(\"devtools\")).","code":"if (\"package:h2o\" %in% search()) { detach(\"package:h2o\", unload=TRUE) } if (\"h2o\" %in% rownames(installed.packages())) { remove.packages(\"h2o\") } install.packages(c(\"RCurl\",\"jsonlite\", \"devtools\")) install.packages(\"h2o\", type=\"source\", repos=\"http://h2o-release.s3.amazonaws.com/h2o/rel-zumbo/2/R\") library(h2o) localH2O = h2o.init() demo(h2o.kmeans) devtools::install_github(\"roukoslab/bluntPred\")"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"run-1","dir":"","previous_headings":"bluntPred","what":"Run","title":"Identification of CRISPR offtargets by BreakTag","text":"Open web app R console: Paste list gRNAs targets click Predict. list can actually table <tab> <comma> separated fields. gRNA sequence expected first column. NOTE: seed portion protospacer (, last 10 nucloetides target sequence) used prediction model.","code":"bluntPred::shiny_bluntPred()"},{"path":"https://roukoslab.github.io/breakinspectoR/index.html","id":"cite","dir":"","previous_headings":"","what":"Cite","title":"Identification of CRISPR offtargets by BreakTag","text":"find tool useful use research, please cite publication: Longo, Sayols et al., Linking CRISPR–Cas9 double-strand break profiles gene editing precision BreakTag. Nat. Biotechnol. 2024. DOI: https://doi.org/10.1038/s41587-024-02238-8","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/breakinspectoR.html","id":null,"dir":"Reference","previous_headings":"","what":"breakinspectoR — breakinspectoR","title":"breakinspectoR — breakinspectoR","text":"Looks enriched DNA regions targeted cleavage CRISPR system","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/breakinspectoR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"breakinspectoR — breakinspectoR","text":"","code":"breakinspectoR(   target,   nontarget = GRanges(),   guide,   PAM = c(\"NAG\", \"NGG\"),   mismatches = 7,   cutsiteFromPAM = 3,   min_breaks = 2,   standard_chromosomes = TRUE,   bsgenome = \"BSgenome.Hsapiens.UCSC.hg38\",   eFDR = TRUE,   scale_nontarget = FALSE,   seed = 666,   cores = getOption(\"mc.cores\", 2L),   verbose = TRUE )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/breakinspectoR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"breakinspectoR — breakinspectoR","text":"target GRanges object coordinates breaks targeted library, character path bed file. nontarget GRanges object coordinates breaks non-targeted library, path bed file. Default: empty GRanges() object, equivalent control library. guide character vector guide RNA sequence. PAM character vector sequence protospacer adjacent motif(s). mismatches numeric, mismatches allowed guide genomic sequence. cutsiteFromPAM distance cutsite PAM. min_breaks minimum number breaks cutsite considered analysis. standard_chromosomes logical, constrain analysis standard chromosomes (defaults TRUE). bsgenome character, bsgenome use (eg. BSgenome.Hsapiens.UCSC.hg38). eFDR logical, estimate empirical false discovery rate. scale_nontarget logical, scale nontarget library size target library. Useful target nontarget libraries sequenced different depths. Defaults FALSE. seed numeric, seed random number generator. Disable NA. cores Use multiple cores. Defaults 2 cores, function benefit adding >2. Nevertheless, speedup 2 cores considerable. verbose logical, keep informing every step.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/breakinspectoR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"breakinspectoR — breakinspectoR","text":"GRanges object coordinates enriched regions, number breaks detected, cut site, enrichment non-targeted library p-value statistical test.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/breakinspectoR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"breakinspectoR — breakinspectoR","text":"","code":"## this is needed only for the package to install if (requireNamespace(\"BSgenome.Hsapiens.UCSC.hg38\", quietly=TRUE)) { ##   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     eFDR     =FALSE,     cutsiteFromPAM=3) } #> Setting seed for random number generation... #>  done #> Loading BSgenome.Hsapiens.UCSC.hg38... #>  done #> Importing breaks... #>  done #> Obtaining sequence context... #>  done #> Filtering out candidates without PAM or too many mismatches... #>  done #> Counting breaks at each offtarget region... #>  done #> Calculating probabilities... #>  done"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/get_guide_and_pam.html","id":null,"dir":"Reference","previous_headings":"","what":"get_guide_and_pam — get_guide_and_pam","title":"get_guide_and_pam — get_guide_and_pam","text":"Get guide PAM sequences around cutsite","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/get_guide_and_pam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_guide_and_pam — get_guide_and_pam","text":"","code":"get_guide_and_pam(x, cutsiteFromPAM, glen, pamlen, genome)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/get_guide_and_pam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_guide_and_pam — get_guide_and_pam","text":"x GRanges objects loci fetch sequences cutsiteFromPAM expected distance cutsite PAM glen length guide sequence pamlen length pam sequence genome bsgenome object (eg. BSgenome.Hsapiens.UCSC.hg38)","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/get_guide_and_pam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_guide_and_pam — get_guide_and_pam","text":"list DNAStrings sense antisense guide pam, loci.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/get_guide_and_pam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_guide_and_pam — get_guide_and_pam","text":"function returns sequence context targeted region. , guide+PAM. Since coordinates break sits left locus enzyme cuts regardless strand, distance PAM different two strands. example: guide matches *sense* strand:   sgRNA=GACCCCCTCCACCCCGCCTC <—— guide ——>pam                        *|        <- `*`: break coord; `|`: actual cutsite 5' (+) GACCCCCTCCACCCCGC|CTCNGG  <- sense (match) 3' (+) CTGGGGGAGGTGGGGCG|GAGNCC  <- antisense (match)                        0|123456  <- distance cutsite coord guide matches *antisense* strand:             *|                   <- `*`: break  coord; `|`: actual cutsite 5' (+) CCNGAG|GCGGGGTGGAGGGGGTC  <- sense (match) 3' (-) GGNCTC|CGCCCCACCTCCCCCAG  <- antisense (match)        543210|                   <- distance cutsite coord        pam<—— guide ——> reversed look like:        <—— guide ——>pam                         |*      <- `*`: break coord; `|`: actual cutsite 5' (+) GACCCCCTCCACCCCGC|CTCNGG                         |012345  <- distance cutsite coord therefore actual cutsite distance PAM differs sense    antisense strands.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/manhattan_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","title":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","text":"manhattan_plot Manhattan plot showing /-targets detected organized chromosomal position bar height representing read count (number breaks).","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/manhattan_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","text":"","code":"manhattan_plot(   x,   bsgenome,   standard_chromosomes = TRUE,   cutsite_breaks_only = TRUE,   subtract_nontarget = FALSE,   log_signal = FALSE,   verbose = TRUE )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/manhattan_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","text":"x GRanges object containing results breakinspectoR analysis. Possibly filtered (eg. qval < .01). bsgenome character, bsgenome use (eg. BSgenome.Hsapiens.UCSC.hg38). standard_chromosomes logical, constrain analysis standard. chromosomes . Default: TRUE. cutsite_breaks_only display breaks cutsite , instead using breaks accumulated complete protospacer. Default: TRUE subtract_nontarget subtract breaks non-target library. Default: FALSE log_signal display log2 transformed signal. Default: FALSE. verbose logical, keep informing every step.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/manhattan_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/manhattan_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"manhattan_plot Manhattan plot showing on/off-targets detected organized by chromosomal position with bar height representing read count (number of breaks). — manhattan_plot","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  manhattan_plot(   offtargets,   bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\" ) #> Loading BSgenome.Hsapiens.UCSC.hg38... #>  done"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/msg.html","id":null,"dir":"Reference","previous_headings":"","what":"msg — msg","title":"msg — msg","text":"Write messages console","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"msg — msg","text":"","code":"msg(verbose, ...)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"msg — msg","text":"verbose logical, keep informing every step ... parameters sent `message()`","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"msg — msg","text":"nothing","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Offtargets detected within the BreakTag test data included in this package — offtargets","title":"Offtargets detected within the BreakTag test data included in this package — offtargets","text":"GRanges object coordinates enriched regions, number breaks detected, cut site, enrichment non-targeted library p-value statistical test.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offtargets detected within the BreakTag test data included in this package — offtargets","text":"","code":"data(breakinspectoR_examples)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Offtargets detected within the BreakTag test data included in this package — offtargets","text":"GRanges object coordinates enriched regions, result calling breakinspectoR analysis `extdata/vegfa.chr6.bed.gz` 'extdata/nontarget.chr6.bed.gz'.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Offtargets detected within the BreakTag test data included in this package — offtargets","text":"result running `breakinspectoR()` example datasets included package: `extdata/vegfa.chr6.bed.gz` 'extdata/nontarget.chr6.bed.gz'","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.scission_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Scission profile of the offtargets detected within the BreakTag test data included in this package — offtargets.scission_profile","title":"Scission profile of the offtargets detected within the BreakTag test data included in this package — offtargets.scission_profile","text":"GRanges object coordinates cutsite, number breaks around cutsite target non-target libraries, p- q-values.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.scission_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scission profile of the offtargets detected within the BreakTag test data included in this package — offtargets.scission_profile","text":"","code":"data(breakinspectoR_examples)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.scission_profile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scission profile of the offtargets detected within the BreakTag test data included in this package — offtargets.scission_profile","text":"GRanges object coordinates cutsite, number breaks around cutsite target non-target libraries, p- q-values, result callilng breakinspectoR analysis `extdata/vegfa.chr6.bed.gz` 'extdata/nontarget.chr6.bed.gz'.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/offtargets.scission_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scission profile of the offtargets detected within the BreakTag test data included in this package — offtargets.scission_profile","text":"result running `scission_profile_analysis()` example datasets included package: `extdata/vegfa.chr6.bed.gz` 'extdata/nontarget.chr6.bed.gz'","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_blunt_rate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","title":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","text":"plot_blunt_rate_density Density Plot Blunt Rate Distribution.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_blunt_rate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","text":"","code":"plot_blunt_rate_density(x)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_blunt_rate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","text":"x named list GRanges object containing results scission_profile_analysis.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_blunt_rate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_blunt_rate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_blunt_rate_density Density Plot for Blunt Rate Distribution. — plot_blunt_rate_density","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   )    offtargets.scission_profile <- scission_profile_analysis(     x        =offtargets,     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\") } # } data(breakinspectoR_examples)  # simulate 2 different experiments by picking 25 random offtargets exp1 <- sample(offtargets.scission_profile, 25) exp2 <- sample(offtargets.scission_profile, 25) plot_blunt_rate_density(list(a=exp1, b=exp2)) #> Picking joint bandwidth of 0.506"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_genomic_position.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","title":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","text":"plot_genomic_position Plot genomic position breaks, identifying detected -/-targets.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_genomic_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","text":"","code":"plot_genomic_position(   x,   target,   bsgenome,   standard_chromosomes = TRUE,   min_breaks = 2,   log_signal = FALSE,   verbose = TRUE )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_genomic_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","text":"x GRanges object containing results breakinspectoR analysis. Possibly filtered (eg. qval < .01). target GRanges object coordinates breaks targeted library, character path bed file. bsgenome character, bsgenome use (eg. BSgenome.Hsapiens.UCSC.hg38). standard_chromosomes logical, constrain analysis standard chromosomes . Default: TRUE. min_breaks minimum number breaks cutsite considered analysis. Default: 2. log_signal display log10 transformed signal. Default: FALSE. verbose logical, keep informing every step.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_genomic_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_genomic_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_genomic_position Plot the genomic position of the breaks, identifying detected on-/off-targets. — plot_genomic_position","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_genomic_position(   offtargets,   target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),   bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\" ) #> Loading BSgenome.Hsapiens.UCSC.hg38... #>  done #> Importing breaks... #>  done"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_guide_fidelity — plot_guide_fidelity","title":"plot_guide_fidelity — plot_guide_fidelity","text":"Show, position guide, fidelity offtarget sequence percentage matching bases.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_guide_fidelity — plot_guide_fidelity","text":"","code":"plot_guide_fidelity(x, guide, pam)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_guide_fidelity — plot_guide_fidelity","text":"x GRanges object containing results breakinspectoR analysis. guide character guide sequence. used drawing, number mismatches already present `x`. pam character PAM sequence. used drawing, number mismatches already present `x`.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_guide_fidelity — plot_guide_fidelity","text":"Nothing.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_guide_fidelity — plot_guide_fidelity","text":"Currently function limitation *fixed* matching, expecting offtarget sequence guide show character. See ?`Biostrings::lowlevel-matching` information.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_guide_fidelity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_guide_fidelity — plot_guide_fidelity","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_guide_fidelity(offtargets, guide=\"GACCCCCTCCACCCCGCCTC\", pam=\"NGG\")"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_mismatch_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","title":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","text":"plot_mismatch_freq Plot frequency mismatches per offtarget.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_mismatch_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","text":"","code":"plot_mismatch_freq(x, bins = 1 + diff(range(x$mismatches)))"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_mismatch_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","text":"x GRanges object containing results breakinspectoR analysis. bins number bins tu use histogram. Defaults maximum number mismatches + 1.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_mismatch_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_mismatch_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_mismatch_freq Plot the frequency of mismatches per offtarget. — plot_mismatch_freq","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_mismatch_freq(offtargets)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_offtargets_by_pam.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","title":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","text":"plot_offtargets_by_pam Plot count offtargets different PAMs","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_offtargets_by_pam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","text":"","code":"plot_offtargets_by_pam(x, fraction = TRUE)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_offtargets_by_pam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","text":"x GRanges object containing results breakinspectoR analysis. fraction logical indicating whether plot show absolute absolute numbers fraction.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_offtargets_by_pam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_offtargets_by_pam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_offtargets_by_pam Plot the count of offtargets by the different PAMs — plot_offtargets_by_pam","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_offtargets_by_pam(offtargets, fraction=TRUE)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_overhang_size.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","title":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","text":"plot_overhang_size Plots proportion blunt staggered reads size.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_overhang_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","text":"","code":"plot_overhang_size(x)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_overhang_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","text":"x named list GRanges object containing results scission_profile_analysis.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_overhang_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_overhang_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_overhang_size Plots the proportion of blunt and staggered reads by size. — plot_overhang_size","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   )    offtargets.scission_profile <- scission_profile_analysis(     x        =offtargets,     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\") } # } data(breakinspectoR_examples)  # simulate 2 different experiments by picking 25 random offtargets exp1 <- sample(offtargets.scission_profile, 25) exp2 <- sample(offtargets.scission_profile, 25) plot_overhang_size(list(a=exp1, b=exp2)) #> Using L2 as id variables #> Using L2 as id variables"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","title":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","text":"plot_pam_composition Plots proportion nucleotide usage per position PAM.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","text":"","code":"plot_pam_composition(x)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","text":"x GRanges object containing results breakinspectoR analysis.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_pam_composition Plots the proportion nucleotide usage per position of the PAM. — plot_pam_composition","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_pam_composition(offtargets)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","title":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","text":"plot_pam_logo PAM prefence Analysis.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","text":"","code":"plot_pam_logo(x)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","text":"x GRanges object containing results breakinspectoR analysis. Possibly filtered (eg. qval < .01).","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_pam_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_pam_logo PAM prefence Analysis. — plot_pam_logo","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_pam_logo(offtargets) #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as of ggplot2 3.3.4. #> ℹ The deprecated feature was likely used in the ggseqlogo package. #>   Please report the issue at <https://github.com/omarwagih/ggseqlogo/issues>."},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_position_cutsite.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","title":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","text":"plot_position_cutsite Plot frequency position cutsite relative guide.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_position_cutsite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","text":"","code":"plot_position_cutsite(x, guide, pam)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_position_cutsite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","text":"x GRanges object containing results breakinspectoR analysis. guide character guide sequence. used drawing. pam character PAM sequence. used drawing.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_position_cutsite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_position_cutsite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_position_cutsite Plot the frequency of the position of the cutsite relative to the guide. — plot_position_cutsite","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_position_cutsite(offtargets, guide=\"GACCCCCTCCACCCCGCCTC\", pam=\"NGG\")"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_relative_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","title":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","text":"plot_relative_activity Plot Cas9 activity list multiple gRNA offtargets relative one experiment.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_relative_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","text":"","code":"plot_relative_activity(   x,   ref = 1,   what = c(\"on-targets\", \"off-targets\", \"all\") )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_relative_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","text":"x named list GRanges object containing results breakinspectoR analysis. Possibly filtered (eg. qval < .01). ref experiment `x` taken reference? either number name. Defaults first experiment `x`. Whether use signal -targets (0 mismatches), -targets (>0 mm) . One c(\"-targets\", \"-targets\", \").","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_relative_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_relative_activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_relative_activity Plot Cas9 activity of a list of multiple gRNA offtargets relative to one experiment. — plot_relative_activity","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  # simulate 2 different experiments by picking 25 random offtargets exp1 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) exp2 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) plot_relative_activity(list(a=exp1, b=exp2), what=\"all\")"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_scission_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","title":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","text":"plot_scission_profile Plot ratios blunt vs. staggered signal OT detected.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_scission_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","text":"","code":"plot_scission_profile(x, type = c(\"frequency\", \"absolute\"))"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_scission_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","text":"x GRanges object containing results scission profile analysis. type show ratio absolute signal percentage. One c(\"frequency\", \"absolute\").","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_scission_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_scission_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_scission_profile Plot ratios of blunt vs. staggered signal for each OT detected. — plot_scission_profile","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   )    offtargets.scission_profile <- scission_profile_analysis(     x        =offtargets,     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\") } # } data(breakinspectoR_examples)  plot_scission_profile(offtargets.scission_profile) #> Warning: Removed 12 rows containing missing values or values outside the scale range (`geom_bar()`)."},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_sequence_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","title":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","text":"plot_sequence_composition Sequence composition -target sites.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_sequence_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","text":"","code":"plot_sequence_composition(x, guide, pam)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_sequence_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","text":"x GRanges object containing results breakinspectoR analysis. guide character guide sequence. used drawing, number mismatches already present `x`. pam character PAM sequence. used drawing, number mismatches already present `x`.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_sequence_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_sequence_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_sequence_composition Sequence composition of off-target sites. — plot_sequence_composition","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  plot_sequence_composition(offtargets, guide=\"GACCCCCTCCACCCCGCCTC\", pam=\"NGG\")"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","title":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","text":"plot_specificity Plot Cas9 specificity list multiple gRNA offtargets.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_specificity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","text":"","code":"plot_specificity(x, ref = 1)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_specificity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","text":"x named list GRanges object containing results breakinspectoR analysis. Possibly filtered (eg. qval < .01). ref experiment `x` taken reference? either number name. Defaults first experiment `x`. Can NULL, ref.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_specificity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","text":"ggplot object.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/plot_specificity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_specificity Plot Cas9 specificity of a list of multiple gRNA offtargets. — plot_specificity","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     cutsiteFromPAM=3   ) } # } data(breakinspectoR_examples)  # simulate 2 different experiments by picking 25 random offtargets exp1 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) exp2 <- c(offtargets[offtargets$mismatches == 0], sample(offtargets, 25)) plot_specificity(list(a=exp1, b=exp2))"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/read_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"read_targets — read_targets","title":"read_targets — read_targets","text":"Read bed file positions breaks","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/read_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_targets — read_targets","text":"","code":"read_targets(x, genome, standard_chromosomes, strandless)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/read_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_targets — read_targets","text":"x GRanges object coordinates breaks path bed file. genome BSgenome object. standard_chromosomes logical, constrain analysis standard chromosomes (defaults TRUE). strandless collapse reads multiple strands.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/read_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_targets — read_targets","text":"GRanges object, unstranded `score` column","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/read_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read_targets — read_targets","text":"","code":"breaks <- read_targets(x=system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),                        genome=\"BSgenome.Hsapiens.UCSC.hg38\",                        standard_chromosomes=TRUE,                        strandless=FALSE)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/reduceOT.html","id":null,"dir":"Reference","previous_headings":"","what":"reduceOT — reduceOT","title":"reduceOT — reduceOT","text":"opinionated filtering OT detected breakinspector.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/reduceOT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reduceOT — reduceOT","text":"","code":"reduceOT(   x,   fdr = 0.01,   qval = 0.01,   mismatches = 7,   standard_chromosomes = TRUE,   cores = getOption(\"mc.cores\", 2L),   verbose = TRUE )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/reduceOT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reduceOT — reduceOT","text":"x GRanges object containing results breakinspectoR analysis. fdr numerical, keep hits empirical FDR threshold. qval numerical, keep hits q-value threshold. mismatches numeric, mismatches allowed guide genomic sequence. standard_chromosomes logical, constrain analysis standard chromosomes (defaults TRUE). cores numerical, number parallel cores use. verbose logical, keep informing every step","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/reduceOT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reduceOT — reduceOT","text":"GRanges object filtered OT.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/reduceOT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reduceOT — reduceOT","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     eFDR     =FALSE,     cutsiteFromPAM=3) } # } data(breakinspectoR_examples)  offtargets_filtered <- reduceOT(offtargets) #> Keeping significant hits only (FDR<0.01 & qval<0.01)...FALSE #>  done #> Removing remove NNN* protospacers... #>  done #> Merging different OT in same protospacer... #>  done #> Merging same OT in different protospacers... #>  done #> Keeping standard chromosomes only... #>  done"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"scission_profile_analysis — scission_profile_analysis","title":"scission_profile_analysis — scission_profile_analysis","text":"Analyses scission profile, whether Cas9 protein cut blunt staggered around cut site. significant p-value means likely Cas9 performed staggered cut.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scission_profile_analysis — scission_profile_analysis","text":"","code":"scission_profile_analysis(   x,   target,   nontarget = GRanges(),   region = 3,   standard_chromosomes = TRUE,   bsgenome = \"BSgenome.Hsapiens.UCSC.hg38\",   qval_cutoff = 0.01,   cores = getOption(\"mc.cores\", 2L),   verbose = TRUE )"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scission_profile_analysis — scission_profile_analysis","text":"x GRanges object containing results breakinspectoR analysis. target GRanges object coordinates breaks targeted library, character path bed file. nontarget GRanges object coordinates breaks non-targeted library, path bed file. Default: empty GRanges() object, equivalent control library. region region around cutsite look alternative breaks. standard_chromosomes logical, constrain analysis standard chromosomes (defaults TRUE). bsgenome character, bsgenome use (eg. BSgenome.Hsapiens.UCSC.hg38). qval_cutoff numeric, indicating q-value cutoff, defaults 0.01. cores Use multiple cores. Defaults 2 cores, function benefit adding >2. Nevertheless, speedup 2 cores considerable. verbose logical, keep informing every step","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scission_profile_analysis — scission_profile_analysis","text":"GRanges object coordinates cutsite, number breaks around cutsite target non-target libraries, p- q-values","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"scission_profile_analysis — scission_profile_analysis","text":"function looks number breaks detected around cutsite using ** breaks detected PAM proximal site (looking reads strand PAM). , binomial test similar one done `breakinspectoR()` function performed test significant enrichment breaks around cutsite target compared non-target libraries.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/scission_profile_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scission_profile_analysis — scission_profile_analysis","text":"","code":"if (FALSE) { # \\dontrun{   offtargets <- breakinspectoR(     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     guide    =\"GACCCCCTCCACCCCGCCTC\",     PAM      =c(\"NGG\", \"NAG\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\",     eFDR     =FALSE,     cutsiteFromPAM=3) } # }  ## this is needed only for the package to install if (requireNamespace(\"BSgenome.Hsapiens.UCSC.hg38\", quietly=TRUE)) { ##   offtargets.scission_profile <- scission_profile_analysis(     x        =offtargets,     target   =system.file(\"extdata/vegfa.chr6.bed.gz\", package=\"breakinspectoR\"),     nontarget=system.file(\"extdata/nontarget.chr6.bed.gz\", package=\"breakinspectoR\"),     bsgenome =\"BSgenome.Hsapiens.UCSC.hg38\")    mcols(offtargets) <- cbind(mcols(offtargets), mcols(offtargets.scission_profile)) } #> Loading BSgenome.Hsapiens.UCSC.hg38... #>  done #> Importing breaks... #>  done #> Counting breaks at each offtarget region... #>  done #> Calculating probabilities... #>  done"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/shiny_BTmotif.html","id":null,"dir":"Reference","previous_headings":"","what":"shiny_BTmotif Launch an interactive web interface. — shiny_BTmotif","title":"shiny_BTmotif Launch an interactive web interface. — shiny_BTmotif","text":"shiny_BTmotif Launch interactive web interface.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/shiny_BTmotif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shiny_BTmotif Launch an interactive web interface. — shiny_BTmotif","text":"","code":"shiny_BTmotif(...)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/shiny_BTmotif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shiny_BTmotif Launch an interactive web interface. — shiny_BTmotif","text":"... params sent shiny::runApp().","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/shiny_BTmotif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shiny_BTmotif Launch an interactive web interface. — shiny_BTmotif","text":"Nothing","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/test_offtargets.html","id":null,"dir":"Reference","previous_headings":"","what":"test_offtargets — test_offtargets","title":"test_offtargets — test_offtargets","text":"Test enrichment offtarget regions vs. non-targeted library","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/test_offtargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test_offtargets — test_offtargets","text":"","code":"test_offtargets(target_breaks, target_total, nontarget_breaks, nontarget_total)"},{"path":"https://roukoslab.github.io/breakinspectoR/reference/test_offtargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test_offtargets — test_offtargets","text":"target_breaks numeric vector breaks target library. target_total numeric total number breaks whole target library nontarget_breaks numeric vector breaks non-target library. nontarget_total numeric total number breaks whole non-target library","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/test_offtargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test_offtargets — test_offtargets","text":"data.frame enrichment, p-value q-value.","code":""},{"path":"https://roukoslab.github.io/breakinspectoR/reference/test_offtargets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test_offtargets — test_offtargets","text":"test region   * = number breaks within region target library   * B = total number breaks whole target library   * C = number breaks within region nontarget library   * D = total number breaks whole nontarget library binomial model calculating p-Value :   * number trials = +1   * number successes = B+1   * estimated success probability trial =  (C+1) / (D+1) enrichment calculated : ((+1) / (B+1)) / ((C+1) / (D+1)) note add pseudocount avoid dividing 0","code":""}]
